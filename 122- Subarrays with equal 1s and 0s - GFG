//Expected Time Complexity: O(n).
//Expected Auxiliary Space: O(n).

class Solution
{
    //Function to count subarrays with 1s and 0s.
    static int countSubarrWithEqualZeroAndOne(int arr[], int n)
    {
        // add your code here

        //making 0 to -1 so that we can convert this problem to zero sum problem
        for(int i=0; i<n; i++)
            if(arr[i] == 0)
                arr[i] = -1;
                
        int res = 0;
        int prefixSum = 0;
        
        HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
        
        for(int i=0; i<n; i++){
            prefixSum += arr[i];
            
            if(prefixSum == 0)
                res++;
                
            if(hm.containsKey(prefixSum))
                res += hm.get(prefixSum);
            
            hm.put(prefixSum, hm.getOrDefault(prefixSum, 0)+1);
        }
        
        return res;
    }
}

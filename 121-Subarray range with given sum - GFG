//Expected Time Comlexity: O(n)
//Expected Auxilary Space: O(n)

class Solution
{
    //Function to count the number of subarrays which adds to the given sum.
    static int subArraySum(int arr[], int n, int sum)
    {
        // add your code here
        int res =0, prefixSum=0;
        HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
        // hm.put(0,1);
        
        for(int i =0; i<n; i++){
            prefixSum += arr[i];

            //we should not add ||arr[i] == sum because in that case for hm.containsKey(prefixSum - sum) again result will get count;
            if(prefixSum == sum)
                res++;
            
            if(hm.containsKey(prefixSum - sum))
                res += hm.get(prefixSum - sum);
            
            hm.put(prefixSum, hm.getOrDefault(prefixSum, 0)+1);
        }
        
        return res;
    }
}

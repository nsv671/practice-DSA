class Solution{
    static List<Integer> pattern(int N){
        // code here
        List<Integer> res = new ArrayList<Integer>();
        decreasingOrder(N, res);
        int temp = res.get(res.size()-1);
        increasingOrder(temp+5, res, N);
        return res;
    }
    
    static void  decreasingOrder(int N, List<Integer> res){
        if(N<=0) {
            res.add(N);
            return;
        }
        res.add(N);
        decreasingOrder(N-5, res);
    }
    
    static void increasingOrder(int N, List<Integer> res, int initial){
        if(N>initial) return;
        res.add(N);
        
        increasingOrder(N+5, res, initial);
    }
}

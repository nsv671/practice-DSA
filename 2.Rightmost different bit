//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.lang.*;
import java.io.*;
import java.math.BigInteger;

class Main{
    
    
	public static void main(String[] args) throws NumberFormatException, IOException {
		Scanner sc=new Scanner(System.in);
		
		//input number of testcases
		int t=sc.nextInt();
		int m,n;
		while(t-->0) {
		    
		    
            Solution obj = new Solution();
            //input m and n
		    m = sc.nextInt();
		    n = sc.nextInt();
		    System.out.println(obj.posOfRightMostDiffBit(m, n));
		}
	}
}




// } Driver Code Ends


//User function Template for Java

class Solution
{
    //Function to find the first position with different bits.
    public static int posOfRightMostDiffBit(int m, int n)
    {
            
        // Your code here
        /*
        we are checking at what position we are getting the difference in bit 
        
        (condition in while loop)
        we are running the loop till we are getting the same bit in both number.
        
        */
        if(m==n) return -1;
        int counter =1;
        int temp =1;
        while( (m&temp)==(n&temp)){
            counter++;
            temp<<=1;
        }
        return counter;
            
    }
}



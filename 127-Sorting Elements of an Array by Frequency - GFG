//Expected Time Complexity: O(NLogN).
//Expected Auxiliary Space: O(N). 

class Solution
{
    //Function to sort the array according to frequency of elements.
    static ArrayList<Integer> sortByFreq(int arr[], int n)
    {
        // add your code here
        ArrayList<Integer> res = new ArrayList<Integer>();
        HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
        
        for(int item : arr)
            hm.put(item, hm.getOrDefault(item, 0)+1);
            
        
        List<Integer> list = new ArrayList<Integer>(hm.keySet());
            
        Collections.sort(list, (a,b) ->{
            if(hm.get(a)==hm.get(b))
                return a-b;
            else
                return hm.get(b) - hm.get(a);
        });

        //ternary operator
        //Collections.sort(list, (a,b) ->{
        //   return hm.get(a)==hm.get(b) ? a-b : hm.get(b) - hm.get(a);
        //});
        
        for(int x : list)
            for(int i=0; i< hm.get(x); i++)
                res.add(x);
        
        return res;
        
        
    }
}

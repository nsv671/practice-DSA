//{ Driver Code Starts
// Initial Template for Java

import java.io.*;
import java.util.*;
class GFG {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int T = sc.nextInt();
        while (T-- > 0) {
            int a, b, c;
            a = sc.nextInt();
            b = sc.nextInt();
            c = sc.nextInt();
            Solution obj = new Solution();
            ArrayList<Integer> ans = obj.quadraticRoots(a, b, c);
            if (ans.size() == 1 && ans.get(0) == -1)
                System.out.print("Imaginary");
            else
                for (Integer val : ans) System.out.print(val + " ");
            System.out.println();
        }
    }
}
// } Driver Code Ends


// User function Template for Java

class Solution {
    public ArrayList<Integer> quadraticRoots(int a, int b, int c) {
        // code here
        int dtr = /*(int)*/ (b*b)-(4*a*c);
        // System.out.print(dtr);
        ArrayList<Integer> res = new ArrayList<Integer>(2);
        
        if(dtr<0){
            res.add(-1);
            return res;
        } else if(dtr==0){
            res.add(-b/(2*a));
            res.add(-b/(2*a));
            return res;
        }else if(dtr>0){
        
        int root1 = (int)Math.floor((-1*b+Math.sqrt(dtr))/(2*a));
        int root2 = (int)Math.floor((-1*b-Math.sqrt(dtr))/(2*a));
        
        res.add(Math.max(root1,root2));
        res.add(Math.min(root1,root2));
        return res;
        }
        
        // res.add((int)(-(double)b+temp)/(2*a));
        // res.add((int)(-(double)b-temp)/(double)(2*a));
        return res;
    }
}
